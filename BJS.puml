@startuml

enum Suit {
    - shortName: String
    + show(): String
}

enum Rank{
    - rank: String
    - points: List<Integer>
    + getPoints(): List<Integer>
    + show(): String
}

class Card {
    - suit: Suit
    - rank: Rank
    + getPoints(): List<Integer>
    + show(): String
}

Card o-- Suit
Card o-- Rank

class Deck {
    - cards: List<Card>
    - currentCardIndex: int
    + nextCard(): Card
    + Deck getShuffledDeck()
}

class BlackjackSolitaireLine {
    - cards: List<Card>
    - threshold: int
    + getPoints(): int
    + getLength(): int
}

class BlackjackSolitaireTable {
    - cells: Card[]
    - getCardNameByIndex(): String
    - createArrayListFromCellsIndexes(): ArrayList<Card>
    + isFull(): boolean
    + putCardToCell()
    + getBlackjackSolitaireLines(): BlackjackSolitaireLine[]
    + show(): String
}

class ScoreResolver {
    + CalculateScoreForLine(): int
}

class BlackjackSolitaire {
    - getFinalScoreMessage(): String
    + play()
}

class BlackjackSolitaireRunner{
    + main()
}

BlackjackSolitaireRunner ..> BlackjackSolitaire

BlackjackSolitaireTable ..> BlackjackSolitaireLine
BlackjackSolitaireTable ..> Card

BlackjackSolitaire ..> ScoreResolver
BlackjackSolitaire ..> BlackjackSolitaireTable
BlackjackSolitaire ..> Deck
BlackjackSolitaire ..> Card

ScoreResolver ..> BlackjackSolitaireLine

BlackjackSolitaireLine o-- Card

Deck o-- Card
Deck ..> Suit
Deck ..> Rank
@enduml
